version: "3.8"

services:
  db:
    image: postgres:latest
    restart: always
    environment:
      PGUSER: postgres
      POSTGRES_PASSWORD: postgres
      POSTRES_DB: ${APP_NAME}_dev
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  web:
    depends_on:
      db:
        condition: service_healthy
    image: ${APP_NAME}:dev-latest
    build:
      context: .
      dockerfile: ./../Dockerfile
      args:
        APP_HOME: ${APP_HOME}
        LOCAL_USER: ${LOCAL_USER}
        EXP_PORT: ${EXP_PORT}
    ports:
      - ${EXP_PORT}:4000
    volumes:
      - ./:${APP_HOME}
    command:
      bash -c "mix do deps.get, compile && cd assets && npm install && node node_modules/webpack/bin/webpack.js --mode development && cd .. && mix ecto.create && mix ecto.migrate && mix phx.server"